/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

backgroundMesh
{
    xMin     -2;
    xMax     2;
    yMin     -2;
    yMax     2;
    zMin     0;
    zMax     4;

    xCells   8;
    yCells   8; 
    zCells   8;
}

vertices
(
    ($:backgroundMesh.xMin $:backgroundMesh.yMin $:backgroundMesh.zMin)
    ($:backgroundMesh.xMax $:backgroundMesh.yMin $:backgroundMesh.zMin)
    ($:backgroundMesh.xMax $:backgroundMesh.yMax $:backgroundMesh.zMin)
    ($:backgroundMesh.xMin $:backgroundMesh.yMax $:backgroundMesh.zMin)

    ($:backgroundMesh.xMin $:backgroundMesh.yMin $:backgroundMesh.zMax)
    ($:backgroundMesh.xMax $:backgroundMesh.yMin $:backgroundMesh.zMax)
    ($:backgroundMesh.xMax $:backgroundMesh.yMax $:backgroundMesh.zMax)
    ($:backgroundMesh.xMin $:backgroundMesh.yMax $:backgroundMesh.zMax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7)
    (
        $:backgroundMesh.xCells
        $:backgroundMesh.yCells
        $:backgroundMesh.zCells
    )
    simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type    patch;
        faces
        (
            (0 3 7 4)
        );
    }

    outlet
    {
        type    patch;
        faces
        (
            (1 2 6 5)
        );
    }

    top
    {
        type    patch;
        faces
        (
            (4 5 6 7)
        );
    }

    left
    {
        type    patch;
        faces
        (
            (0 1 5 4)
        );
    }

    right
    {
        type    patch;
        faces
        (
            (3 2 6 7)
        );
    }

    bottom
    {
        type    patch;
        faces
        (
            (0 1 2 3)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
